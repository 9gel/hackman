name: deb

on:
  push:
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository
        uses: actions/checkout@v2

      - uses: uraimo/run-on-arch-action@v2
        name: Build deb
        with:
          arch: armv6
          distro: bullseye  # Equivalent to Raspbian 8
          githubToken: ${{ github.token }}

          # Create an artifacts directory
          setup: |
            mkdir -p "${PWD}/artifacts"

          # Mount the artifacts directory as /artifacts in the container
          dockerRunArgs: |
            --volume "${PWD}/artifacts:/artifacts"

          install: |
            set -x

            apt-get update -q -y

            # Install Python, fpm deps (ruby) and the kitchen sink required to build everything...
            apt-get install -q -y git python3 python3-venv python3-dev build-essential libffi-dev libreadline-gplv2-dev libncursesw5-dev libssl-dev libsqlite3-dev libgdbm-dev libc6-dev libbz2-dev rustc cargo squashfs-tools ruby-full jq

            # Install FPM
            gem install fpm

            # Install Poetry
            curl -sSL https://install.python-poetry.org | python3 - --yes || true
            export PATH=$PATH:/root/.local/bin

          run: |
            set -x

            # Add Poetry to $PATH
            export PATH=$PATH:/root/.local/bin

            # We want to write to _actual_ /opt as some installation processes
            # are creating hard coded shebangs pointing to the venv location.
            mkdir -p /opt

            # Create virtualenv
            python3 -m venv /opt/hackman
            . /opt/hackman/bin/activate

            # Install dependencies
            poetry install --no-interaction --no-root --no-dev

            # Install self into env
            poetry build -f wheel -n
            pip install --no-deps dist/*.whl
            rm -rf dist *.egg-info

            # Generate Django static files
            env DJANGO_SETTINGS_MODULE=hackman.settings_prod hackman-manage collectstatic

            # Create a temporary rootfs directory
            mkdir -p rootfs/opt
            mv /opt/hackman rootfs/opt/hackman

            # Create symlinks to all binaries starting with hackman* or dsl* in /usr/local/bin
            mkdir -p rootfs/usr/local/bin
            for bin in rootfs/opt/hackman/bin/dsl* rootfs/opt/hackman/bin/hackman*; do
              ln -s /opt/hackman/bin/$(basename $bin) rootfs/usr/local/bin/$(basename $bin)
            done

            # Copy systemd units
            mkdir -p rootfs/lib/systemd
            cp -rv systemd rootfs/lib/systemd/system

            # Build deb
            version=$(grep '^version' pyproject.toml | cut -d = -f 2 | jq -r)
            fpm \
              -s dir \
              -t deb \
              -C rootfs \
              --name hackman \
              --version $version \
              --iteration 1 \
              --description "DSL Hackman" \
              --depends redis-server \
              --depends python3 \
              --depends libffi \
              .

            mv *.deb /artifacts/

      - uses: actions/upload-artifact@v3
        with:
          name: artifacts
          path: artifacts
